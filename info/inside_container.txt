$>docker container run -it -> start new container interactively
-i, --interactive Keep STDIN open even if not attached
-t, --tty Allocate a pseudo-TTY, gives you a-like ssh command line interface, so it's like you ssh to your container

$>docker container exec -it -> run addition command to existing container.

Something you can configure just from the run command.
docker container run [OPTIONS] IMAGE [COMMAND] [ARG...]
As we can see after IMAGE (nginx, mysql ...) we have ability to pass some commands that will be executed as soon as 
  container starts.

For example $>docker container run -it nginx bash -> will give you a terminal inside the running container.
When you finish your work, and just exit from container bash cli -> docker stops automatically. 

If you install something in your container, stop and start it once again -> you'll have your installed 
stuff there, but if you created a new container -> ou won't get those things. 

$>docker container start -ai container_name (-a for attach, attaches STDOUT/ER and forward signal)
But be aware, if you've create a container from some image - and didn't set the "-it _name_ bash"
as an command to execute - after you'll stop container - and start it - bash will be executed.
But if you didn't set bash from the start - it won't appear.

$>docker container exec -it container_name program_i_want_to_execute (i.e. bash) -> this will start 
process inside a running container.

Note that "ps" is no longer included in default containers anymore.

Since you've started an another process inside container, even since you've exit from container and it
should stop automatically -> container doesn't stopped, because there are some addition process is
running inside container.

Simple task - to check different version in Ubuntu and Centos curl command.
We should run two containers, and update package manager.
Ubuntu -> apt-get update && apt-get install curl
curl --version

$>docker container run --rm -ti centos:7 bash ->rm will remove container as soon as I logout from it.
$>yum update curl
$>curl --version -> 7.29.0

$>docker container run --rm -ti ubuntu:14.04 bash
$>apt-get update && apt-get instal -y curl -> Pay attention -y, it's for answer for ubuntu question [Y,y]
$>curl --version -> 7.35.0

Another one - it's a simple Round-Robin test.